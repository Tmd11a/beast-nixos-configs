# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/e195728f-05a5-4e7b-90f3-7554c69155fc";
      fsType = "ext4";
      label  = "rootfs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E10F-1C35";
      fsType = "vfat";
    };

  fileSystems."/mnt/data1" =
  # SPCC_Solid_State_Disk_2024090608008777
    { device = "/dev/disk/by-uuid/50f79118-49ba-48e2-b538-17a1f33a32b9"; 
      fsType = "xfs";
      options = [ "nofail" "users" "noatime" "x-systemd.automount" ];
    };
    
  fileSystems."/mnt/data2" =
  # SPCC_Solid_State_Disk_2024080704000029
    { device = "/dev/disk/by-uuid/24d34c2f-af0c-4f7e-abd1-0089c9d82ce1"; 
      fsType = "xfs";
      options = [ "nofail" "users" "noatime" "x-systemd.automount" ];
    };
  
  # fileSystems."/mnt/data3" =
  #   { device = "/dev/disk/by-uuid/3cfaa046-2350-4b4f-85a6-ef5200b2bf48";
  #     fsType = "xfs";
  #     options = [ "nofail" ];
  #   };
  
  # fileSystems."/mnt/parity" =
  #   { device = "/dev/disk/by-uuid/77adb496-f0cd-4889-92ef-a19a97776e17"; 
  #     fsType = "xfs";
  #     options = [ "nofail" ];
  #   };

  fileSystems."/tmp/ramdisk" = { 
      fsType = "tmpfs";
      options = [ "defaults" "size=16G" "x-gvfs-show" ];
    };
  
  fileSystems."/tank" = {
      fsType = "fuse.mergerfs";
      device = "/mnt/data*";
      options = [ "cache.files=partial" "dropcacheonclose=true" "category.create=mfs" "fsname=mergerfs" "minfreespace=200G" ];
    };



  swapDevices =
    [ { device = "/dev/disk/by-uuid/8fd47429-0a0e-4333-8900-4d5f34804800"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
